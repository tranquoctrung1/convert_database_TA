//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConvertDatabase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class tmptawacoEntities : DbContext
    {
        public tmptawacoEntities()
            : base("name=tmptawacoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DeviceTokenApp> DeviceTokenApps { get; set; }
        public virtual DbSet<t_Data_Manual> t_Data_Manual { get; set; }
        public virtual DbSet<t_Devices_ChannelsConfigs> t_Devices_ChannelsConfigs { get; set; }
        public virtual DbSet<t_Devices_Loggers> t_Devices_Loggers { get; set; }
        public virtual DbSet<t_Devices_Meter_Accreditation_Type> t_Devices_Meter_Accreditation_Type { get; set; }
        public virtual DbSet<t_Devices_Meters> t_Devices_Meters { get; set; }
        public virtual DbSet<t_Devices_SitesConfigs> t_Devices_SitesConfigs { get; set; }
        public virtual DbSet<t_Devices_Status> t_Devices_Status { get; set; }
        public virtual DbSet<t_Devices_Transmitters> t_Devices_Transmitters { get; set; }
        public virtual DbSet<t_Devices_Units> t_Devices_Units { get; set; }
        public virtual DbSet<t_Gis_Sites> t_Gis_Sites { get; set; }
        public virtual DbSet<t_Meter_Files> t_Meter_Files { get; set; }
        public virtual DbSet<t_Site_Availabilities> t_Site_Availabilities { get; set; }
        public virtual DbSet<t_Site_Companies> t_Site_Companies { get; set; }
        public virtual DbSet<t_Site_Covers> t_Site_Covers { get; set; }
        public virtual DbSet<t_Site_Files> t_Site_Files { get; set; }
        public virtual DbSet<t_Site_Groups> t_Site_Groups { get; set; }
        public virtual DbSet<t_Site_Levels> t_Site_Levels { get; set; }
        public virtual DbSet<t_Site_MeterDirections> t_Site_MeterDirections { get; set; }
        public virtual DbSet<t_Site_Sites> t_Site_Sites { get; set; }
        public virtual DbSet<t_Site_Status> t_Site_Status { get; set; }
        public virtual DbSet<t_Site_ViewGroups> t_Site_ViewGroups { get; set; }
        public virtual DbSet<t_User_Roles> t_User_Roles { get; set; }
        public virtual DbSet<t_User_Staffs> t_User_Staffs { get; set; }
        public virtual DbSet<t_User_Users> t_User_Users { get; set; }
        public virtual DbSet<t_History_Site_Loggers> t_History_Site_Loggers { get; set; }
        public virtual DbSet<t_History_Site_Meters> t_History_Site_Meters { get; set; }
        public virtual DbSet<t_History_Site_Transmitters> t_History_Site_Transmitters { get; set; }
        public virtual DbSet<t_History_Sites> t_History_Sites { get; set; }
        public virtual DbSet<t_Site_Group2s> t_Site_Group2s { get; set; }
        public virtual DbSet<t_Site_Group3s> t_Site_Group3s { get; set; }
        public virtual DbSet<t_Site_Group4s> t_Site_Group4s { get; set; }
        public virtual DbSet<t_Site_Group5s> t_Site_Group5s { get; set; }
    
        public virtual int Autoupdate_FillData(string iD, Nullable<System.DateTime> time, Nullable<double> value)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.DateTime));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Autoupdate_FillData", iDParameter, timeParameter, valueParameter);
        }
    
        public virtual int Autoupdate_LastRows(string iD, ObjectParameter max)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Autoupdate_LastRows", iDParameter, max);
        }
    
        public virtual int Autoupdate_Null(string iD, Nullable<System.DateTime> day)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Autoupdate_Null", iDParameter, dayParameter);
        }
    
        public virtual int Autoupdate_UpdateNull(string iD, Nullable<System.DateTime> time, Nullable<double> value)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.DateTime));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Autoupdate_UpdateNull", iDParameter, timeParameter, valueParameter);
        }
    
        public virtual int InsertDeviceToken(string userName, string token)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDeviceToken", userNameParameter, tokenParameter);
        }
    
        public virtual int NewDeleteCommand(string original_Uid)
        {
            var original_UidParameter = original_Uid != null ?
                new ObjectParameter("Original_Uid", original_Uid) :
                new ObjectParameter("Original_Uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewDeleteCommand", original_UidParameter);
        }
    
        public virtual ObjectResult<NewInsertCommand_Result> NewInsertCommand(string uid, string staffId, string pwd, string salt, string role, Nullable<bool> active, Nullable<System.DateTime> timeStamp, string ip, Nullable<int> logCount, Nullable<byte> zoom, string company, string language)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(string));
    
            var staffIdParameter = staffId != null ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var timeStampParameter = timeStamp.HasValue ?
                new ObjectParameter("TimeStamp", timeStamp) :
                new ObjectParameter("TimeStamp", typeof(System.DateTime));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var logCountParameter = logCount.HasValue ?
                new ObjectParameter("LogCount", logCount) :
                new ObjectParameter("LogCount", typeof(int));
    
            var zoomParameter = zoom.HasValue ?
                new ObjectParameter("Zoom", zoom) :
                new ObjectParameter("Zoom", typeof(byte));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewInsertCommand_Result>("NewInsertCommand", uidParameter, staffIdParameter, pwdParameter, saltParameter, roleParameter, activeParameter, timeStampParameter, ipParameter, logCountParameter, zoomParameter, companyParameter, languageParameter);
        }
    
        public virtual ObjectResult<NewSelectCommand_Result> NewSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewSelectCommand_Result>("NewSelectCommand");
        }
    
        public virtual ObjectResult<NewUpdateCommand_Result> NewUpdateCommand(string uid, string staffId, string pwd, string salt, string role, Nullable<bool> active, Nullable<System.DateTime> timeStamp, string ip, Nullable<int> logCount, Nullable<byte> zoom, string company, string language, string original_Uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(string));
    
            var staffIdParameter = staffId != null ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var timeStampParameter = timeStamp.HasValue ?
                new ObjectParameter("TimeStamp", timeStamp) :
                new ObjectParameter("TimeStamp", typeof(System.DateTime));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var logCountParameter = logCount.HasValue ?
                new ObjectParameter("LogCount", logCount) :
                new ObjectParameter("LogCount", typeof(int));
    
            var zoomParameter = zoom.HasValue ?
                new ObjectParameter("Zoom", zoom) :
                new ObjectParameter("Zoom", typeof(byte));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            var original_UidParameter = original_Uid != null ?
                new ObjectParameter("Original_Uid", original_Uid) :
                new ObjectParameter("Original_Uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewUpdateCommand_Result>("NewUpdateCommand", uidParameter, staffIdParameter, pwdParameter, saltParameter, roleParameter, activeParameter, timeStampParameter, ipParameter, logCountParameter, zoomParameter, companyParameter, languageParameter, original_UidParameter);
        }
    
        public virtual ObjectResult<p_Calculate_Daily_Data_DMA_Result> p_Calculate_Daily_Data_DMA(string dmaid, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var dmaidParameter = dmaid != null ?
                new ObjectParameter("dmaid", dmaid) :
                new ObjectParameter("dmaid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Calculate_Daily_Data_DMA_Result>("p_Calculate_Daily_Data_DMA", dmaidParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_Daily_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_All(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_All", startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_All_Org(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_All_Org", startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Company(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Company", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Company_Org(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Company_Org", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Group(string group, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Group", groupParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Group_Org(string group, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Group_Org", groupParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Group2(string group, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Group2", groupParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Group3(string group, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Group3", groupParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Group4(string group, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Group4", groupParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Group5(string group, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Group5", groupParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Level(string level, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Level", levelParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_By_Level_Org(string level, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_By_Level_Org", levelParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Output_Org(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Output_Org", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_Daily_Report(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Daily_Report", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<p_Calculate_Daily_Site_Result> p_Calculate_Daily_Site(string siteid, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Calculate_Daily_Site_Result>("p_Calculate_Daily_Site", siteidParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<p_Calculate_Hourly_Data_DMA_Result> p_Calculate_Hourly_Data_DMA(string dmaid, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var dmaidParameter = dmaid != null ?
                new ObjectParameter("dmaid", dmaid) :
                new ObjectParameter("dmaid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Calculate_Hourly_Data_DMA_Result>("p_Calculate_Hourly_Data_DMA", dmaidParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_Hourly_Output_All(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Hourly_Output_All", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<p_Calculate_Hourly_Site_Result> p_Calculate_Hourly_Site(string siteid, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Calculate_Hourly_Site_Result>("p_Calculate_Hourly_Site", siteidParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_Logger_Daily_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Logger_Daily_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<p_Calculate_Monthly_Data_DMA_Result> p_Calculate_Monthly_Data_DMA(string dmaid, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var dmaidParameter = dmaid != null ?
                new ObjectParameter("dmaid", dmaid) :
                new ObjectParameter("dmaid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Calculate_Monthly_Data_DMA_Result>("p_Calculate_Monthly_Data_DMA", dmaidParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_Monthly_Output_All(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_Monthly_Output_All", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<p_Calculate_Monthly_Site_Result> p_Calculate_Monthly_Site(string siteid, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Calculate_Monthly_Site_Result>("p_Calculate_Monthly_Site", siteidParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_Company_Hourly_Out_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Company_Hourly_Out_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_One_Company_Hourly_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Company_Hourly_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_One_Company_Monthly_Out_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Company_Monthly_Out_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_One_Company_Monthly_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Company_Monthly_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_One_Company_Out_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Company_Out_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_One_Company_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Company_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_One_Group_Daily_Output(string group, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Group_Daily_Output", groupParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_Group2_Daily_Output(string group, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Group2_Daily_Output", groupParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_Group3_Daily_Output(string group, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Group3_Daily_Output", groupParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_Group4_Daily_Output(string group, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Group4_Daily_Output", groupParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_Group5_Daily_Output(string group, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Group5_Daily_Output", groupParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_MCompany_Output(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_MCompany_Output", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Calculate_One_Site_Daily_Output(string siteId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Site_Daily_Output", siteIdParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_Site_Hourly_Output(string siteId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Site_Hourly_Output", siteIdParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_Site_Montly_Output(string siteId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Site_Montly_Output", siteIdParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calculate_One_Site_Yearly_Output(string siteId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Site_Yearly_Output", siteIdParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<p_Calculate_Yearly_Site_Result> p_Calculate_Yearly_Site(string siteid, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Calculate_Yearly_Site_Result>("p_Calculate_Yearly_Site", siteidParameter, startParameter, endParameter);
        }
    
        public virtual int p_Calcutale_Daily_Site_One_Time(string siteid, Nullable<System.DateTime> start)
        {
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calcutale_Daily_Site_One_Time", siteidParameter, startParameter);
        }
    
        public virtual int p_Calcutale_Hourly_Site_One_Time(string siteid, Nullable<System.DateTime> start)
        {
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calcutale_Hourly_Site_One_Time", siteidParameter, startParameter);
        }
    
        public virtual int p_Data_Logger_CreateTable(string channelId)
        {
            var channelIdParameter = channelId != null ?
                new ObjectParameter("channelId", channelId) :
                new ObjectParameter("channelId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Data_Logger_CreateTable", channelIdParameter);
        }
    
        public virtual int p_Data_Logger_Get(string siteId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("siteId", siteId) :
                new ObjectParameter("siteId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Data_Logger_Get", siteIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int p_Data_Manual_Delete(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string siteId, ObjectParameter success)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Data_Manual_Delete", startDateParameter, endDateParameter, siteIdParameter, success);
        }
    
        public virtual int p_Data_Manual_InsertOrUpdate(string siteId, Nullable<System.DateTime> timeStamp, Nullable<double> index, Nullable<double> output, string description, ObjectParameter success)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var timeStampParameter = timeStamp.HasValue ?
                new ObjectParameter("TimeStamp", timeStamp) :
                new ObjectParameter("TimeStamp", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(double));
    
            var outputParameter = output.HasValue ?
                new ObjectParameter("Output", output) :
                new ObjectParameter("Output", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Data_Manual_InsertOrUpdate", siteIdParameter, timeStampParameter, indexParameter, outputParameter, descriptionParameter, success);
        }
    
        public virtual ObjectResult<p_Get_Data_Logger_Complex_Result> p_Get_Data_Logger_Complex(string siteid)
        {
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Get_Data_Logger_Complex_Result>("p_Get_Data_Logger_Complex", siteidParameter);
        }
    
        public virtual ObjectResult<p_GetChannelByLoggerId_Result> p_GetChannelByLoggerId(string loggerid)
        {
            var loggeridParameter = loggerid != null ?
                new ObjectParameter("loggerid", loggerid) :
                new ObjectParameter("loggerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_GetChannelByLoggerId_Result>("p_GetChannelByLoggerId", loggeridParameter);
        }
    
        public virtual int p_GetDataDeviceToken(string siteId)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_GetDataDeviceToken", siteIdParameter);
        }
    
        public virtual ObjectResult<p_History_Site_Delete_Result> p_History_Site_Delete(string siteId, ObjectParameter success)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("siteId", siteId) :
                new ObjectParameter("siteId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_History_Site_Delete_Result>("p_History_Site_Delete", siteIdParameter, success);
        }
    
        public virtual int p_History_Site_InsertOrUpdate(string siteId, Nullable<System.DateTime> date, Nullable<bool> meter, string serialMeter, Nullable<bool> transmitter, string serialTransmitter, Nullable<bool> logger, string serialLogger, Nullable<bool> battery, Nullable<bool> transmitterBattery, Nullable<bool> loggerBattery, string description, Nullable<double> index, ObjectParameter success)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var meterParameter = meter.HasValue ?
                new ObjectParameter("Meter", meter) :
                new ObjectParameter("Meter", typeof(bool));
    
            var serialMeterParameter = serialMeter != null ?
                new ObjectParameter("SerialMeter", serialMeter) :
                new ObjectParameter("SerialMeter", typeof(string));
    
            var transmitterParameter = transmitter.HasValue ?
                new ObjectParameter("Transmitter", transmitter) :
                new ObjectParameter("Transmitter", typeof(bool));
    
            var serialTransmitterParameter = serialTransmitter != null ?
                new ObjectParameter("SerialTransmitter", serialTransmitter) :
                new ObjectParameter("SerialTransmitter", typeof(string));
    
            var loggerParameter = logger.HasValue ?
                new ObjectParameter("Logger", logger) :
                new ObjectParameter("Logger", typeof(bool));
    
            var serialLoggerParameter = serialLogger != null ?
                new ObjectParameter("SerialLogger", serialLogger) :
                new ObjectParameter("SerialLogger", typeof(string));
    
            var batteryParameter = battery.HasValue ?
                new ObjectParameter("Battery", battery) :
                new ObjectParameter("Battery", typeof(bool));
    
            var transmitterBatteryParameter = transmitterBattery.HasValue ?
                new ObjectParameter("TransmitterBattery", transmitterBattery) :
                new ObjectParameter("TransmitterBattery", typeof(bool));
    
            var loggerBatteryParameter = loggerBattery.HasValue ?
                new ObjectParameter("LoggerBattery", loggerBattery) :
                new ObjectParameter("LoggerBattery", typeof(bool));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_InsertOrUpdate", siteIdParameter, dateParameter, meterParameter, serialMeterParameter, transmitterParameter, serialTransmitterParameter, loggerParameter, serialLoggerParameter, batteryParameter, transmitterBatteryParameter, loggerBatteryParameter, descriptionParameter, indexParameter, success);
        }
    
        public virtual int p_History_Site_Logger_Delete(string siteId, Nullable<System.DateTime> dateChanged)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Logger_Delete", siteIdParameter, dateChangedParameter);
        }
    
        public virtual int p_History_Site_Logger_Insert(string siteId, Nullable<System.DateTime> dateChanged, string oldMeterSerial, string newMeterSerial, Nullable<double> oldIndex, Nullable<double> newIndex, string description)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            var oldMeterSerialParameter = oldMeterSerial != null ?
                new ObjectParameter("OldMeterSerial", oldMeterSerial) :
                new ObjectParameter("OldMeterSerial", typeof(string));
    
            var newMeterSerialParameter = newMeterSerial != null ?
                new ObjectParameter("NewMeterSerial", newMeterSerial) :
                new ObjectParameter("NewMeterSerial", typeof(string));
    
            var oldIndexParameter = oldIndex.HasValue ?
                new ObjectParameter("OldIndex", oldIndex) :
                new ObjectParameter("OldIndex", typeof(double));
    
            var newIndexParameter = newIndex.HasValue ?
                new ObjectParameter("NewIndex", newIndex) :
                new ObjectParameter("NewIndex", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Logger_Insert", siteIdParameter, dateChangedParameter, oldMeterSerialParameter, newMeterSerialParameter, oldIndexParameter, newIndexParameter, descriptionParameter);
        }
    
        public virtual int p_History_Site_Logger_Select_By_SiteId(string siteId)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Logger_Select_By_SiteId", siteIdParameter);
        }
    
        public virtual int p_History_Site_Logger_Update(string siteId, Nullable<System.DateTime> dateChanged, string oldMeterSerial, string newMeterSerial, Nullable<double> oldIndex, Nullable<double> newIndex, string description)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            var oldMeterSerialParameter = oldMeterSerial != null ?
                new ObjectParameter("OldMeterSerial", oldMeterSerial) :
                new ObjectParameter("OldMeterSerial", typeof(string));
    
            var newMeterSerialParameter = newMeterSerial != null ?
                new ObjectParameter("NewMeterSerial", newMeterSerial) :
                new ObjectParameter("NewMeterSerial", typeof(string));
    
            var oldIndexParameter = oldIndex.HasValue ?
                new ObjectParameter("OldIndex", oldIndex) :
                new ObjectParameter("OldIndex", typeof(double));
    
            var newIndexParameter = newIndex.HasValue ?
                new ObjectParameter("NewIndex", newIndex) :
                new ObjectParameter("NewIndex", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Logger_Update", siteIdParameter, dateChangedParameter, oldMeterSerialParameter, newMeterSerialParameter, oldIndexParameter, newIndexParameter, descriptionParameter);
        }
    
        public virtual int p_History_Site_Meter_Delete(string siteId, Nullable<System.DateTime> dateChanged)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Meter_Delete", siteIdParameter, dateChangedParameter);
        }
    
        public virtual int p_History_Site_Meter_Insert(string siteId, Nullable<System.DateTime> dateChanged, string oldMeterSerial, string newMeterSerial, Nullable<double> oldIndex, Nullable<double> newIndex, string description)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            var oldMeterSerialParameter = oldMeterSerial != null ?
                new ObjectParameter("OldMeterSerial", oldMeterSerial) :
                new ObjectParameter("OldMeterSerial", typeof(string));
    
            var newMeterSerialParameter = newMeterSerial != null ?
                new ObjectParameter("NewMeterSerial", newMeterSerial) :
                new ObjectParameter("NewMeterSerial", typeof(string));
    
            var oldIndexParameter = oldIndex.HasValue ?
                new ObjectParameter("OldIndex", oldIndex) :
                new ObjectParameter("OldIndex", typeof(double));
    
            var newIndexParameter = newIndex.HasValue ?
                new ObjectParameter("NewIndex", newIndex) :
                new ObjectParameter("NewIndex", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Meter_Insert", siteIdParameter, dateChangedParameter, oldMeterSerialParameter, newMeterSerialParameter, oldIndexParameter, newIndexParameter, descriptionParameter);
        }
    
        public virtual int p_History_Site_Meter_Select_By_SiteId(string siteId)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Meter_Select_By_SiteId", siteIdParameter);
        }
    
        public virtual int p_History_Site_Meter_Update(string siteId, Nullable<System.DateTime> dateChanged, string oldMeterSerial, string newMeterSerial, Nullable<double> oldIndex, Nullable<double> newIndex, string description)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            var oldMeterSerialParameter = oldMeterSerial != null ?
                new ObjectParameter("OldMeterSerial", oldMeterSerial) :
                new ObjectParameter("OldMeterSerial", typeof(string));
    
            var newMeterSerialParameter = newMeterSerial != null ?
                new ObjectParameter("NewMeterSerial", newMeterSerial) :
                new ObjectParameter("NewMeterSerial", typeof(string));
    
            var oldIndexParameter = oldIndex.HasValue ?
                new ObjectParameter("OldIndex", oldIndex) :
                new ObjectParameter("OldIndex", typeof(double));
    
            var newIndexParameter = newIndex.HasValue ?
                new ObjectParameter("NewIndex", newIndex) :
                new ObjectParameter("NewIndex", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Meter_Update", siteIdParameter, dateChangedParameter, oldMeterSerialParameter, newMeterSerialParameter, oldIndexParameter, newIndexParameter, descriptionParameter);
        }
    
        public virtual int p_History_Site_Transmitter_Delete(string siteId, Nullable<System.DateTime> dateChanged)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Transmitter_Delete", siteIdParameter, dateChangedParameter);
        }
    
        public virtual int p_History_Site_Transmitter_Insert(string siteId, Nullable<System.DateTime> dateChanged, string oldMeterSerial, string newMeterSerial, Nullable<double> oldIndex, Nullable<double> newIndex, string description)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            var oldMeterSerialParameter = oldMeterSerial != null ?
                new ObjectParameter("OldMeterSerial", oldMeterSerial) :
                new ObjectParameter("OldMeterSerial", typeof(string));
    
            var newMeterSerialParameter = newMeterSerial != null ?
                new ObjectParameter("NewMeterSerial", newMeterSerial) :
                new ObjectParameter("NewMeterSerial", typeof(string));
    
            var oldIndexParameter = oldIndex.HasValue ?
                new ObjectParameter("OldIndex", oldIndex) :
                new ObjectParameter("OldIndex", typeof(double));
    
            var newIndexParameter = newIndex.HasValue ?
                new ObjectParameter("NewIndex", newIndex) :
                new ObjectParameter("NewIndex", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Transmitter_Insert", siteIdParameter, dateChangedParameter, oldMeterSerialParameter, newMeterSerialParameter, oldIndexParameter, newIndexParameter, descriptionParameter);
        }
    
        public virtual int p_History_Site_Transmitter_Select_By_SiteId(string siteId)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Transmitter_Select_By_SiteId", siteIdParameter);
        }
    
        public virtual int p_History_Site_Transmitter_Update(string siteId, Nullable<System.DateTime> dateChanged, string oldMeterSerial, string newMeterSerial, Nullable<double> oldIndex, Nullable<double> newIndex, string description)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var dateChangedParameter = dateChanged.HasValue ?
                new ObjectParameter("DateChanged", dateChanged) :
                new ObjectParameter("DateChanged", typeof(System.DateTime));
    
            var oldMeterSerialParameter = oldMeterSerial != null ?
                new ObjectParameter("OldMeterSerial", oldMeterSerial) :
                new ObjectParameter("OldMeterSerial", typeof(string));
    
            var newMeterSerialParameter = newMeterSerial != null ?
                new ObjectParameter("NewMeterSerial", newMeterSerial) :
                new ObjectParameter("NewMeterSerial", typeof(string));
    
            var oldIndexParameter = oldIndex.HasValue ?
                new ObjectParameter("OldIndex", oldIndex) :
                new ObjectParameter("OldIndex", typeof(double));
    
            var newIndexParameter = newIndex.HasValue ?
                new ObjectParameter("NewIndex", newIndex) :
                new ObjectParameter("NewIndex", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_History_Site_Transmitter_Update", siteIdParameter, dateChangedParameter, oldMeterSerialParameter, newMeterSerialParameter, oldIndexParameter, newIndexParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<p_Map_GetChannels_ByLoggerId_Result> p_Map_GetChannels_ByLoggerId(string loggerId)
        {
            var loggerIdParameter = loggerId != null ?
                new ObjectParameter("LoggerId", loggerId) :
                new ObjectParameter("LoggerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Map_GetChannels_ByLoggerId_Result>("p_Map_GetChannels_ByLoggerId", loggerIdParameter);
        }
    
        public virtual ObjectResult<p_Map_GetSites_ByCompany_Result> p_Map_GetSites_ByCompany(string company)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Map_GetSites_ByCompany_Result>("p_Map_GetSites_ByCompany", companyParameter);
        }
    
        public virtual int p_RemoveTokenLogoutApp(string token)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_RemoveTokenLogoutApp", tokenParameter);
        }
    
        public virtual int p_test(string company, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_test", companyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_Total_DMA_Error()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_Total_DMA_Error");
        }
    
        public virtual ObjectResult<Nullable<int>> p_Total_Site_Action()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_Total_Site_Action");
        }
    
        public virtual ObjectResult<Nullable<int>> p_Total_Site_Error()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_Total_Site_Error");
        }
    
        public virtual ObjectResult<Nullable<int>> p_Total_Site_Has_Data()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_Total_Site_Has_Data");
        }
    
        public virtual int UpdateStatusPushNoti(string token, Nullable<bool> status)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStatusPushNoti", tokenParameter, statusParameter);
        }
    }
}
